System 1: rpi3b+ w/https://energenie4u.co.uk/res/pdfs/ENER314-IR_User_guide_V3.pdf
System 2: rpi3b+ w/http://anavi.technology/files/anavi-infrared-phat.pdf

/boot/config.txt: (yes, this is completly revered from default values)
dtoverlay=gpio-ir,gpio_pin=18
dtoverlay=gpio-ir-tx,gpio_pin=17

Aug 13 22:34:37 rasp-3-1 kernel: [    5.946504] rc rc1: GPIO IR Bit Banging Transmitter as /devices/platform/gpio-ir-transmitter@11/rc/rc1
Aug 13 22:34:37 rasp-3-1 kernel: [    5.946816] rc rc1: lirc_dev: driver gpio-ir-tx registered at minor = 0, no receiver, raw IR transmitter
Aug 13 22:34:37 rasp-3-1 kernel: [    6.007385] rc rc0: gpio_ir_recv as /devices/platform/ir-receiver@12/rc/rc0
Aug 13 22:34:37 rasp-3-1 kernel: [    6.007637] rc rc0: lirc_dev: driver gpio_ir_recv registered at minor = 1, raw IR receiver, no transmitter
Aug 13 22:34:37 rasp-3-1 kernel: [    6.007902] input: gpio_ir_recv as /devices/platform/ir-receiver@12/rc/rc0/input0

https://github.com/raspberrypi/linux/issues/2993
Add these rules in /etc/udev/rules.d/71-lirc.rules to get stable /dev/lirc-rx and /dev/lirc-tx device names:

ACTION=="add", SUBSYSTEM=="lirc", DRIVERS=="gpio_ir_recv", SYMLINK+="lirc-rx"
ACTION=="add", SUBSYSTEM=="lirc", DRIVERS=="gpio-ir-tx", SYMLINK+="lirc-tx"
ACTION=="add", SUBSYSTEM=="lirc", DRIVERS=="pwm-ir-tx", SYMLINK+="lirc-tx"

Change the device and driver /etc/lirc/lirc_options.conf:
driver          = default
device          = /dev/lirc-rx

Copy lirc_options.conf to lirc_tx_options.conf and edit these lines:

device          = /dev/lirc-tx
output          = /var/run/lirc/lircd-tx
pidfile         = /var/run/lirc/lircd-tx.pid

sudo mode2 --device /dev/lirc-rx -m > logs/output1.log
AUTO + 17C
AUTO + 30C
COOL + 17C
COOL + 30C

https://github.com/zeroflow/ESPAircon/wiki/Steps-of-the-reverse-engineering
https://www.waveshare.com/wiki/Raspberry_Pi_Tutorial_Series:_Infrared_Remote_Control


https://github.com/zeroflow/ESPAircon/wiki/Steps-of-the-reverse-engineering

Based on URLs above, early guess that output is NEC encoded.
Failed to find code to parse NEC data :/

output4 = AUTO + mange 30, en av hver av 29 - 16 og mange 17
output5 = auto + mange 17 + mange 30
output6 = auto + av/på 30 grader + av/på 17 grader
output7 = auto/cool/dry/none/fan @ 17C (mode-knappen) (start på auto + lavere temp, slutter på mode fra fan til auto)
output8 = auto/cool/dry/none/fan @ 30C (mode-knappen) (start på auto + høyere temp, slutter på mode fra fan til auto)
output9 = auto: 17->30, 17->30
output10 = fan = start: none => low, slutt: none => low
output 11 = auto 17 => led display on/off
output 12 = auto 30 => led display on/off
output 13 = auto 30 => swing on/off?
output 14 = cool 17 => sleep?
output 15: auto 30 on/off
output 16: auto 17 timer on fra 0 til 0.5 (sendt) -> 24 -> 0.0 (sendt)
output 17: auto 17 timer off
